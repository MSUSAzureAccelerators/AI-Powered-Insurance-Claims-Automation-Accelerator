{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_fsihacklogicapp_name": {
            "defaultValue": "",
            "type": "String"
        },
        "connections_azureblob_externalid": {
            "defaultValue": "",
            "type": "String"
        },
        "connections_cognitiveservicescustomvision_externalid": {
            "defaultValue": "",
            "type": "String"
        },
        "connections_documentdb_externalid": {
            "defaultValue": "",
            "type": "String"
        },
        "connections_formrecognizer_externalid": {
            "defaultValue": "",
            "type": "String"
        },
		"subscription_id": {
		  "defaultValue": "",
          "type": "String"
		},
		"location": {
		  "defaultValue": "",
          "type": "String"
		},
		"resource_group": {
		  "defaultValue": "",
          "type": "String"
		}
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_fsihacklogicapp_name')]",
            "location": "eastus",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_document_uploaded": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "splitOn": "@triggerBody()",
                            "metadata": {
                                "JTJmdXBsb2Fk": "/upload",
                                "JTJmemlwLWZpbGVz": "/zip-files"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/triggers/batch/onupdatedfile",
                                "queries": {
                                    "folderId": "JTJmdXBsb2Fk",
                                    "maxFileCount": 1
                                }
                            }
                        }
                    },
                    "actions": {
                        "Copy_file_to_processing_folder": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/copyFile",
                                "queries": {
                                    "destination": "/processing/@{triggerBody()?['Name']}",
                                    "overwrite": true,
                                    "queryParametersSingleEncoded": true,
                                    "source": "@triggerBody()?['Path']"
                                }
                            }
                        },
                        "Create_SAS_URI_by_path": {
                            "runAfter": {
                                "Delete_file_from_original_folder": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Permissions": "Read,Write,List"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/CreateSharedLinkByPath",
                                "queries": {
                                    "path": "@body('Copy_file_to_processing_folder')?['Path']"
                                }
                            }
                        },
                        "Delete_file_from_original_folder": {
                            "runAfter": {
                                "Copy_file_to_processing_folder": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['Id']))}"
                            }
                        },
                        "Filter_Probability": {
                            "runAfter": {
                                "Parse_Json_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Parse_Json_Response')",
                                "where": "@greater(item()['probability'], 0.85)"
                            }
                        },
                        "For_each_tags": {
                            "foreach": "@body('Filter_Probability')",
                            "actions": {
                                "Copy_file_to_Success_Folder": {
                                    "runAfter": {
                                        "Switch": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/copyFile",
                                        "queries": {
                                            "destination": "/succeeded/@{body('Copy_file_to_processing_folder')?['Name']}",
                                            "overwrite": true,
                                            "queryParametersSingleEncoded": true,
                                            "source": "@body('Copy_file_to_processing_folder')?['Path']"
                                        }
                                    }
                                },
                                "Delete_Processed_Blob": {
                                    "runAfter": {
                                        "Copy_file_to_Success_Folder": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "headers": {
                                            "SkipDeleteIfFileNotFoundOnServer": false
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(body('Copy_file_to_processing_folder')?['Path']))}"
                                    }
                                },
                                "Switch": {
                                    "runAfter": {},
                                    "cases": {
                                        "Driving_License": {
                                            "case": "Driving License",
                                            "actions": {
                                                "Analyze_Driving_License": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "headers": {
                                                            "inputFileUrl": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['formrecognizer']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2.1/prebuilt/idDocument/analyze",
                                                        "queries": {
                                                            "includeTextDetails": true
                                                        }
                                                    }
                                                },
                                                "For_each_Id": {
                                                    "foreach": "@body('Analyze_Driving_License')?['analyzeResult']?['documentResults']",
                                                    "actions": {
                                                        "Create_or_UpdateId": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "Address": "@{items('For_each_Id')?['fields']?['Address']?['text']}",
                                                                    "CountryRegion": "@{items('For_each_Id')?['fields']?['CountryRegion']?['valueCountryRegion']}",
                                                                    "DateOfBirth": "@{items('For_each_Id')?['fields']?['DateOfBirth']?['text']}",
                                                                    "DateOfExpiration": "@{items('For_each_Id')?['fields']?['DateOfExpiration']?['text']}",
                                                                    "DocumentNumber": "@{items('For_each_Id')?['fields']?['DocumentNumber']?['text']}",
                                                                    "DocumentType": "@{items('For_each_Id')?['fields']?['DocumentType']?['text']}",
                                                                    "FileName": "@{triggerBody()?['Name']}",
                                                                    "FirstName": "@{items('For_each_Id')?['fields']?['FirstName']?['text']}",
                                                                    "LastName": "@{items('For_each_Id')?['fields']?['LastName']?['text']}",
                                                                    "MachineReadableZone": "@{items('For_each_Id')?['fields']?['MachineReadableZone']?['text']}",
                                                                    "Nationality": "@{items('For_each_Id')?['fields']?['Nationality']?['valueCountryRegion']}",
                                                                    "Region": "@{items('For_each_Id')?['fields']?['Region']?['text']}",
                                                                    "Sex": "@{items('For_each_Id')?['fields']?['Sex']?['text']}",
                                                                    "claimId": "@{variables('claimId')}",
                                                                    "formtype": "Driving License",
                                                                    "id": "@{guid()}"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v3/dbs/@{encodeURIComponent('fsihack')}/colls/@{encodeURIComponent('claims')}/docs"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Analyze_Driving_License": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                }
                                            }
                                        },
                                        "Insurance": {
                                            "case": "Insurance",
                                            "actions": {
                                                "Analyze_Insurance": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "headers": {
                                                            "inputFileUrl": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['formrecognizer']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2.1/custom/models/@{encodeURIComponent('Insurance')}/analyze",
                                                        "queries": {
                                                            "includeTextDetails": true
                                                        }
                                                    }
                                                },
                                                "For_each_insurance": {
                                                    "foreach": "@body('Parse_Insurance_Response')",
                                                    "actions": {
                                                        "Create_or_Update_Insurance": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "Agency": "",
                                                                    "Agency Address": "@{items('For_each_insurance')?['fields']?['Agency Address']?['text']}",
                                                                    "Company": "@{items('For_each_insurance')?['fields']?['Company']?['text']}",
                                                                    "Effective Date": "@{items('For_each_insurance')?['fields']?['Effective date']?['text']}",
                                                                    "Expiration Date": "@{items('For_each_insurance')?['fields']?['Expiration Date']?['text']}",
                                                                    "FileName": "@{triggerBody()?['Name']}",
                                                                    "Insured": "@{items('For_each_insurance')?['fields']?['Insured']?['text']}",
                                                                    "Insured Address": "@{items('For_each_insurance')?['fields']?['Insured Address']?['text']}",
                                                                    "Make": "@{items('For_each_insurance')?['fields']?['Make']?['text']}",
                                                                    "Model": "@{items('For_each_insurance')?['fields']?['Model']?['text']}",
                                                                    "PolicyNumber": "@{items('For_each_insurance')?['fields']?['Policy Number']?['text']}",
                                                                    "State": "@{items('For_each_insurance')?['fields']?['State']?['text']}",
                                                                    "VIN": "@{items('For_each_insurance')?['fields']?['VIN']?['text']}",
                                                                    "Year": "@{items('For_each_insurance')?['fields']?['Year']?['text']}",
                                                                    "claimId": "@{variables('claimId')}",
                                                                    "formtype": "Insurance",
                                                                    "id": "@{guid()}"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v3/dbs/@{encodeURIComponent('fsihack')}/colls/@{encodeURIComponent('claims')}/docs"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Parse_Insurance_Response": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Parse_Insurance_Response": {
                                                    "runAfter": {
                                                        "Analyze_Insurance": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('Analyze_Insurance')?['analyzeResult']?['documentResults']",
                                                        "schema": {
                                                            "items": {
                                                                "properties": {
                                                                    "_fields": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "fieldName": {
                                                                                    "type": "string"
                                                                                },
                                                                                "fieldValue": {
                                                                                    "properties": {
                                                                                        "boundingBox": {
                                                                                            "items": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "confidence": {
                                                                                            "type": "number"
                                                                                        },
                                                                                        "elements": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "page": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "text": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "valueString": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "fieldName",
                                                                                "fieldValue"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "docType": {
                                                                        "type": "string"
                                                                    },
                                                                    "docTypeConfidence": {
                                                                        "type": "number"
                                                                    },
                                                                    "fields": {
                                                                        "properties": {
                                                                            "Agency": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Agency Address": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Company": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Effective date": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Expiration Date": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Insured": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Insured Address": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Make": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Model": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Policy Number": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "State": {
                                                                                "properties": {
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "VIN": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Year": {
                                                                                "properties": {
                                                                                    "boundingBox": {
                                                                                        "items": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "confidence": {
                                                                                        "type": "number"
                                                                                    },
                                                                                    "elements": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "page": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "text": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueString": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "modelId": {
                                                                        "type": "string"
                                                                    },
                                                                    "pageRange": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "docType",
                                                                    "modelId",
                                                                    "pageRange",
                                                                    "fields",
                                                                    "docTypeConfidence",
                                                                    "_fields"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "Service_Estimate": {
                                            "case": "Service Estimate",
                                            "actions": {
                                                "Analyze_Service_Estimate": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "headers": {
                                                            "inputFileUrl": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['formrecognizer']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2.1/prebuilt/invoice/analyze",
                                                        "queries": {
                                                            "includeTextDetails": true
                                                        }
                                                    }
                                                },
                                                "For_each_Invoice": {
                                                    "foreach": "@body('Analyze_Service_Estimate')?['analyzeResult']?['documentResults']",
                                                    "actions": {
                                                        "Create_or_Update_Invoice": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "AmountDue": "@{items('For_each_Invoice')?['fields']?['AmountDue']}",
                                                                    "BillingAddress": "@{items('For_each_Invoice')?['fields']?['BillingAddress']?['text']}",
                                                                    "BillingAddressRecipient": "@{items('For_each_Invoice')?['fields']?['BillingAddressRecipient']?['text']}",
                                                                    "CustomerAddress": "@{items('For_each_Invoice')?['fields']?['CustomerAddress']?['text']}",
                                                                    "CustomerAddressRecipient": "@{items('For_each_Invoice')?['fields']?['CustomerAddressRecipient']?['text']}",
                                                                    "CustomerId": "@{items('For_each_Invoice')?['fields']?['CustomerId']?['text']}",
                                                                    "CustomerName": "@{items('For_each_Invoice')?['fields']?['CustomerName']?['text']}",
                                                                    "DueDate": "@{items('For_each_Invoice')?['fields']?['DueDate']?['text']}",
                                                                    "FileName": "@{triggerBody()?['Name']}",
                                                                    "InvoiceDate": "@{items('For_each_Invoice')?['fields']?['InvoiceDate']?['text']}",
                                                                    "InvoiceId": "@{items('For_each_Invoice')?['fields']?['InvoiceId']?['text']}",
                                                                    "InvoiceTotal": "@{items('For_each_Invoice')?['fields']?['InvoiceTotal']?['text']}",
                                                                    "PreviousUnpaidBalance": "@{items('For_each_Invoice')?['fields']?['PreviousUnpaidBalance']?['text']}",
                                                                    "PurchaseOrder": "@{items('For_each_Invoice')?['fields']?['PurchaseOrder']?['text']}",
                                                                    "RemittanceAddress": "@{items('For_each_Invoice')?['fields']?['RemittanceAddress']?['text']}",
                                                                    "RemittanceAddressRecipient": "@{items('For_each_Invoice')?['fields']?['RemittanceAddressRecipient']?['text']}",
                                                                    "ServiceAddress": "@{items('For_each_Invoice')?['fields']?['ServiceAddress']?['text']}",
                                                                    "ServiceAddressRecipient": "@{items('For_each_Invoice')?['fields']?['ServiceAddressRecipient']?['text']}",
                                                                    "ServiceEndDate": "@{items('For_each_Invoice')?['fields']?['ServiceEndDate']?['text']}",
                                                                    "ServiceStartDate": "@{items('For_each_Invoice')?['fields']?['ServiceStartDate']?['text']}",
                                                                    "ShippingAddress": "@{items('For_each_Invoice')?['fields']?['ShippingAddress']?['text']}",
                                                                    "ShippingAddressRecipient": "@{items('For_each_Invoice')?['fields']?['ShippingAddressRecipient']?['text']}",
                                                                    "SubTotal": "@{items('For_each_Invoice')?['fields']?['SubTotal']?['text']}",
                                                                    "TotalTax": "@{items('For_each_Invoice')?['fields']?['TotalTax']?['text']}",
                                                                    "VendorAddress": "@{items('For_each_Invoice')?['fields']?['VendorAddress']?['text']}",
                                                                    "VendorAddressRecipient": "@{items('For_each_Invoice')?['fields']?['VendorAddressRecipient']?['text']}",
                                                                    "VendorName": "@{items('For_each_Invoice')?['fields']?['VendorName']?['text']}",
                                                                    "claimId": "@{variables('claimId')}",
                                                                    "formtype": "Service Estimate",
                                                                    "id": "@{guid()}"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v3/dbs/@{encodeURIComponent('fsihack')}/colls/@{encodeURIComponent('claims')}/docs"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Analyze_Service_Estimate": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@items('For_each_tags')?['tagName']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Filter_Probability": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Image_Classification": {
                            "runAfter": {
                                "Create_SAS_URI_by_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Url": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicescustomvision']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/customvision/v3.0/Prediction/@{encodeURIComponent('00efc47c-9c30-4d92-a21d-2caac17b8eba')}/classify/iterations/@{encodeURIComponent('latest')}/url"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "claimId",
                                        "type": "string",
                                        "value": "@{substring(triggerBody()?['DisplayName'],0,indexOf(triggerBody()?['DisplayName'], '_'))}"
                                    }
                                ]
                            }
                        },
                        "Parse_Json_Response": {
                            "runAfter": {
                                "Image_Classification": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Image_Classification')?['predictions']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "probability": {
                                                "type": "number"
                                            },
                                            "tagId": {
                                                "type": "string"
                                            },
                                            "tagName": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "probability",
                                            "tagId",
                                            "tagName"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblob_externalid')]",
                                "connectionName": "azureblob",
                                "id": "[concat('/subscriptions/', parameters('subscription_id'), '/providers/Microsoft.Web/locations/', parameters('location') ,'/managedApis/azureblob')]"
                            },
                            "cognitiveservicescustomvision": {
                                "connectionId": "[parameters('connections_cognitiveservicescustomvision_externalid')]",
                                "connectionName": "cognitiveservicescustomvision",
                                "id": "[concat('/subscriptions/', parameters('subscription_id'), '/providers/Microsoft.Web/locations/', parameters('location') ,'/managedApis/cognitiveservicescustomvision')]"
                            },
                            "documentdb": {
                                "connectionId": "[parameters('connections_documentdb_externalid')]",
                                "connectionName": "documentdb",
                                "id": "[concat('/subscriptions/', parameters('subscription_id'), '/providers/Microsoft.Web/locations/', parameters('location') ,'/managedApis/documentdb')]"
                            },
                            "formrecognizer": {
                                "connectionId": "[parameters('connections_formrecognizer_externalid')]",
                                "connectionName": "formrecognizer",
                                "id": "[concat('/subscriptions/', parameters('subscription_id'), '/providers/Microsoft.Web/locations/', parameters('location') ,'/managedApis/formrecognizer')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}